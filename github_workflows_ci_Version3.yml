name: CI

on:
  pull_request:
  push:
    branches: [ main, master ]

permissions:
  contents: read

jobs:
  parser-and-tests:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: pip-${{ runner.os }}-${{ hashFiles('requirements.txt') }}
          restore-keys: |
            pip-${{ runner.os }}-

      - name: Install Python deps
        run: |
          pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run Parser (validation only)
        run: |
          if [ -f scripts/urls.txt ]; then
            python scripts/parse_landtag_pdf.py --list-file scripts/urls.txt --schema-validate --log-level INFO
          else
            python scripts/parse_landtag_pdf.py --schema-validate --log-level INFO
          fi

      - name: Run Pytests
        run: pytest -q

  node-build:
    runs-on: ubuntu-latest
    needs: parser-and-tests
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Use Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install deps
        run: npm install

      - name: Type Check (falls TS)
        run: |
          if [ -f tsconfig.json ]; then
            npx tsc --noEmit
          else
            echo "Kein tsconfig.json – überspringe Type Check."
          fi

      - name: Build (falls vorhanden)
        run: |
          if npm run | grep -q "build"; then
            npm run build
          else
            echo "Kein build Script vorhanden – überspringe."
          fi